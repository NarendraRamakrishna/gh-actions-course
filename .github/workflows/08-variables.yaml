name: 08 - Using Variables
on:
     
    workflow_dispatch:  
env:
    WORKFLOW_VAR: 'This is a workflow variable'
    OVERWRITTEN_VAR: 'This is an overwritten workflow variable'
    UNDEFINED_VAR_WITH_DEFAULT: ${{ vars.UNDEFINED_VAR || 'undefined_var_default_value' }}
jobs:
  echo: 
    runs-on: ubuntu-latest
    env:
      JOB_VAR: 'This is a job variable'
      OVERWRITTEN_VAR: 'This is an overwritten job variable'    
    steps:
    - name: Print Env Variables
      run: |
        echo "Step environment variable: ${{ env.STEP_VAR }}"
        echo "Step environment variable: ${{ env.step_var_2 }}"
        echo "Job environment variable: ${{ env.JOB_VAR }}"
        echo "Workflow environment variable: ${{ env.WORKFLOW_VAR }}"
        echo "Overwritten job environment variable: ${{ env.OVERWRITTEN_VAR }}"
      env:
        STEP_VAR: 'This is a step variable'
        step_var_2: 'This is another step variable'
       
    - name: Overwrite Job Variable
      run: |
        
        echo "Step environment variable: ${{ env.OVERWRITTEN_VAR }}"
       
        
      env:
        OVERWRITTEN_VAR: 'I have been overwritten at the step level'
  echo2:
    runs-on: ubuntu-latest
    steps:
    - name: Print Env Variables
      run: |
        echo "Repository variable: ${{ vars.MY_VAR }}"
  echo-prod:
    runs-on: ubuntu-latest
    environment: staging
    steps:
    - name: Print Prod Variables
      run: |
        echo "Repository variable: ${{ vars.MY_VAR }}"
        echo "Environment variable: ${{ vars.TARGET_VAR }}"
  echo-undefined:
    runs-on: ubuntu-latest  
    steps:
    - name: Print Undefined Variable
      run: |
        echo "Undefined variable with default value: ${{ env.UNDEFINED_VAR_WITH_DEFAULT }}"
        